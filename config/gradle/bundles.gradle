/*
 * Copyright 2016 MovingBlocks
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

enum Bundle {
    win32,
    win64,
    linux32,
    linux64,
    macosx;

    File jreArchive
}

task buildBundles {}

task unzipBundle(type: Copy) {
    destinationDir buildDir
    from (zipTree("${projectDir}/build/distributions/TerasologyLauncher.zip"))
}

def launcherDir = "${buildDir}/TerasologyLauncher/"

Bundle.each { arch ->
    arch.jreArchive = new File("${projectDir}/jres/${arch}.zip")

    def zipBase = ""
    // Rebase everything in the zip file for MacOS X
    if (arch == Bundle.macosx) {
        zipBase = "TerasologyLauncher.app/Contents/Resources/"
    }

    def buildBundleTask = task("zip" + arch.name().capitalize(), type: Zip) {
        dependsOn unzipBundle
        archiveName "TerasologyLauncher-${arch}.zip"
        destinationDir new File("${buildDir}/bundles/")
        from(zipTree(arch.jreArchive)) {
            into "${zipBase}jre"
        }
        from(launcherDir) {
            // Platform independent files
            exclude "*.exe"
            exclude "bin"
            into zipBase
        }
        /*
            Copy only the files relevant to the platform we are bundling the JRE for.
            I.e only copy 32-bit natives for windows if we bundle the 32-bit JRE.
         */
        if (arch == Bundle.win32) {
            from (launcherDir) {
                include "TerasologyLauncher.x86.exe"
                rename { "TerasologyLauncher.exe" }
            }
        } else if (arch == Bundle.win64) {
            from (launcherDir) {
                include "TerasologyLauncher.x64.exe"
                rename { "TerasologyLauncher.exe" }
            }
        } else if (arch == Bundle.linux32) {
            from ("bundles/linux") {
                include "run_linux.sh"
                rename { "terasology_launcher.sh" }
                fileMode 755
            }
        } else if (arch == Bundle.linux64) {
            from ("bundles/launchers") {
                include "run_linux.sh"
                rename { "terasology_launcher.sh" }
                fileMode 755
            }
        } else if (arch == Bundle.macosx) {
            from ("bundles/macosx") {
                include "**/*"
                into "TerasologyLauncher.app/Contents"
            }
        }
    }

    buildBundles.dependsOn buildBundleTask
}
